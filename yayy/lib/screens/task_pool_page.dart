import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:yayy/providers/task_provider.dart';

class TaskPoolPage extends StatefulWidget {
  const TaskPoolPage({super.key});

  @override
  State<TaskPoolPage> createState() => _TaskPoolPageState();
}

class _TaskPoolPageState extends State<TaskPoolPage> {
  final TextEditingController _titleController = TextEditingController();
  final TextEditingController _descController = TextEditingController();
  String _selectedType = "G√ºnl√ºk";
  final List<String> _taskTypes = ["G√ºnl√ºk", "Haftalƒ±k", "Aylƒ±k"];

  void _addTask(BuildContext context) {
    final title = _titleController.text.trim();
    final desc = _descController.text.trim();

    if (title.isNotEmpty && desc.isNotEmpty) {
      Provider.of<TaskProvider>(context, listen: false)
          .addTask(title, desc, type: _selectedType);
      _titleController.clear();
      _descController.clear();
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text("G√∂rev eklendi")),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("G√∂rev Havuzu"),
      ),
      body: ListView(
        padding: const EdgeInsets.all(16.0),
        children: [
          const Text("Yeni G√∂rev Ekle",
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
          const SizedBox(height: 12),
          TextField(
            controller: _titleController,
            decoration: const InputDecoration(
              labelText: "G√∂rev Ba≈ülƒ±ƒüƒ±",
              border: OutlineInputBorder(),
            ),
          ),
          const SizedBox(height: 12),
          TextField(
            controller: _descController,
            decoration: const InputDecoration(
              labelText: "A√ßƒ±klama",
              border: OutlineInputBorder(),
            ),
          ),
          const SizedBox(height: 12),
          DropdownButtonFormField<String>(
            value: _selectedType,
            decoration: const InputDecoration(
              labelText: "G√∂rev Tipi",
              border: OutlineInputBorder(),
            ),
            items: _taskTypes.map((type) {
              return DropdownMenuItem<String>(
                value: type,
                child: Text(type),
              );
            }).toList(),
            onChanged: (value) {
              setState(() {
                _selectedType = value!;
              });
            },
          ),
          const SizedBox(height: 12),
          ElevatedButton(
            onPressed: () => _addTask(context),
            child: const Text("G√∂revi Ekle"),
          ),
          const Divider(height: 32),
          const Text("üìÖ G√ºnl√ºk G√∂revler",
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
          const SizedBox(height: 8),
          _buildStaticTaskList([
            "10 dk meditasyon",
            "1 bardak su i√ß",
            "1 g√∂rev tamamla"
          ], "G√ºnl√ºk"),
          const SizedBox(height: 20),
          const Text("üìÜ Haftalƒ±k G√∂revler",
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
          const SizedBox(height: 8),
          _buildStaticTaskList([
            "3 g√ºn spor yap",
            "1 kitap b√∂l√ºm√º oku",
            "Arkada≈üƒ±na g√∂rev ata"
          ], "Haftalƒ±k"),
          const SizedBox(height: 20),
          const Text("üìÖ Aylƒ±k G√∂revler",
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
          const SizedBox(height: 8),
          _buildStaticTaskList([
            "1 yeni alƒ±≈ükanlƒ±k ba≈ülat",
            "30 g√ºn streak yap",
            "G√∂rev listeni g√∂zden ge√ßir"
          ], "Aylƒ±k"),
        ],
      ),
    );
  }

  Widget _buildStaticTaskList(List<String> tasks, String type) {
    return Column(
      children: tasks
          .map((task) => Card(
                child: ListTile(
                  leading: const Icon(Icons.bolt),
                  title: Text(task),
                  trailing: const Icon(Icons.add),
                  onTap: () {
                    Provider.of<TaskProvider>(context, listen: false).addTask(
                        task, "G√∂rev havuzundan se√ßildi", type: type);
                    ScaffoldMessenger.of(context).showSnackBar(
                      SnackBar(content: Text("‚Äú$task‚Äù g√∂revine eklendi")),
                    );
                  },
                ),
              ))
          .toList(),
    );
  }
}

